name: production branch stuff

on:
  push:
    branches:
      - production

jobs:
  products:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Ensure Staging Branch is successful
        run: |
          STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/WTYLER9/codeyou-devops-with-aws-final-project-saleor-full/commits/staging/status" | jq -r '.statuses[0].state')
          
          if [[ "$STATUS" != "success" ]]; then
            echo "Staging pipeline is not successful. Aborting deployment."
            exit 1
          fi
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: build docker files
        run: |
          cd saleor-api
          docker build -t ${{ secrets.DOCKER_USERNAME }}/saleor:production .
          cd ..
          cd saleor-dashboard
          docker build -t ${{ secrets.DOCKER_USERNAME }}/saleor:productiondash .

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.35.0/trivy_0.35.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.35.0_Linux-64bit.deb
      
      - name: trivy scan
        run: |
          trivy image ${{ secrets.DOCKER_USERNAME }}/saleor:production > trivy_scan_report.log || true
          trivy image ${{ secrets.DOCKER_USERNAME }}/saleor:productiondash > trivy_scandash_report.log || true

      - name: Push Docker images and latest tags to Docker Hub
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/saleor:production \
            ${{ secrets.DOCKER_USERNAME }}/saleor:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor:production
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/saleor:productiondash \
            ${{ secrets.DOCKER_USERNAME }}/saleor:latestdash
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor:productiondash
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor:latestdash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Push to AWS
        run: aws ecs update-service --cluster Saleor-Project --service saleor-update --force-new-deployment      